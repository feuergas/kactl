/*	最长不重复相等子串	后缀数组(poj1743)*/#include<iostream>#include<cstdio>using namespace std;int n,i,q,h,mid,a[21000],wa[21000],wb[21000],s[21000],wv[21000],sa[21000],rank[21000],height[21000];bool cmp(int *y,int a,int b,int l){	return (y[a]==y[b]&&y[a+l]==y[b+l]);}void da(int *r,int n,int m){	int *x=wa,*y=wb,i,j,p;	for (i=0;i<m;i++)	s[i]=0;	for (i=0;i<n;i++)	s[x[i]=r[i]]++;	for (i=1;i<m;i++)	s[i]+=s[i-1];	for (i=0;i<n;i++)	sa[--s[x[i]]]=i;	for (j=1,p=1;p<n;j*=2,m=p)	{		for (p=0,i=n-j;i<n;i++)	y[p++]=i;		for (i=0;i<n;i++)	if (sa[i]>=j)	y[p++]=sa[i]-j;		for (i=0;i<n;i++)	wv[i]=x[y[i]];		for (i=0;i<m;i++)	s[i]=0;		for (i=0;i<n;i++)	s[wv[i]]++;		for (i=1;i<m;i++)	s[i]+=s[i-1];		for (i=n-1;i>=0;i--)	sa[--s[wv[i]]]=y[i];//注意		for (swap(x,y),x[sa[0]]=0,p=1,i=1;i<n;i++)		x[sa[i]]=cmp(y,sa[i],sa[i-1],j)?p-1:p++;	}}void calheight(){	int i,j,p=0;	for (i=1;i<=n;i++)	rank[sa[i]]=i;	for (i=0;i<n;height[rank[i++]]=p)	for (p?p--:0,j=sa[rank[i]-1];a[j+p]==a[i+p];p++);}bool can(int k){	int q,h,mi,ma;	for (q=1;q<=n;q=h+1)	{		for (mi=sa[q],ma=sa[q],h=q;h<=n&&height[h+1]>=k;h++)	mi=min(mi,sa[h+1]),ma=max(ma,sa[h+1]);		if (ma-mi>=k)	return true;	}	return false;}int main(){	while (scanf("%d",&n),n)	{		for (i=0;i<n;i++)	scanf("%d",&a[i]);		for (i=0;i<n-1;i++)	a[i]=a[i+1]-a[i]+88;		n--;a[n]=0;		da(a,n+1,177);		calheight();//注意:calheight的时候得到的数组是1~n的,相当于把我们在末尾添上的0(排在最前)去掉了		for (q=0,h=n-1;q<h-1;)		{			mid=(q+h)/2;			if (can(mid))	q=mid;			else	h=mid;		}		if (can(h))	printf("%d\n",h+1>=5?h+1:0);		else	printf("%d\n",q+1>=5?q+1:0);	}}